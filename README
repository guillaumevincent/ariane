======
Ariane
======

Ariane is a python package for describing, producing and visualizing RESTful APIs.
It can help you create a Rest Api object that you can use with any template engine in python (Django, Jinja2).
Or you can create an automatic documentation and use the templates provided by the community and automate the generation of the documentation for your API.

    #!/usr/bin/env python

    from ariane import RestAPIDoc

    restApi = RestAPIDoc('api_description.txt')
    restApi.generate('documentation.html', 'template.html')



Overview
=========

your api_description.txt looks like this and use ConfigParser file format


[api]
name = Ariane Api Description
version = 1.0.0
base_url = http://localhost:9999/api/

[code_status]
400 = Bad input parameter. Error message should indicate which one and why.
401 = Bad or expired token. This can happen if the user or Ariane revoked or expired an access token. To fix, you should re-authenticate the user.
403 = Bad OAuth request (wrong consumer key, bad nonce, expired timestamp...). Unfortunately, re-authenticating the user won't help here.
404 = File or folder not found at the specified path.
405 = Request method not expected (generally should be GET or POST).
503 = Your app is making too many requests and is being rate limited. 503s can trigger on a per-app or per-user basis.
5xx = Server error.

[auth:GET]
url = /auth/logout/
description = clear an existing cookie in the session
input =
return =

[auth:POST]
url = /auth/login/
description = create a cookie in the session
input :
    {
        "username": "",
        "password": ""
    }
return :
    HTTP/1.1 200 OK
    Content-Length: 0
    Content-Type: text/html; charset=UTF-8
    Server: TornadoServer/2.4.1
    Set-Cookie: user="ImFkbUluIg==|9364473586|0ef6536217a330f6574831ed672666ca0eaaeab4"; expires=Sat, 27 Apr 2013 12:26:27 GMT; Path=/
